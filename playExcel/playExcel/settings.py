"""
Django settings for playExcel project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hsiw!ugnh+wf$i8n9#o(l^8+^rrd70k+$20s*8306$e5a5_ous'

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = False 

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'common',
    'kryptos',
    'echo',
    'hashinclude',
    'dalalbull',
    'convolution',

    'corsheaders',
    'django_ace',
    'channels'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'playExcel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'playExcel.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'read_default_file': os.path.join(BASE_DIR,'database_config.cnf'),
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
STATICFILES_DIRS = ( os.path.join(BASE_DIR,'app','media'), )
# Changed media-url to app/media

MEDIA_URL = 'playExcel/app/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, "app", "media")

# Redis session settings
SESSION_ENGINE = 'redis_sessions.session'
SESSION_REDIS_HOST = 'localhost'
SESSION_REDIS_PORT = 6379
SESSION_REDIS_DB = 0
SESSION_REDIS_PREFIX = 'session'

# Celery Settings

CELERY_BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'


#CELERY_IMPORTS = ('dalalbull.tasks',)#, 'hashinclude.tasks')


# CELERY_ANNOTATIONS = {
#     'tasks.tq': {'rate_limit': '1/s'},
#     'tasks.dq': {'rate_limit': '1/s'},
#     #'tasks.broadcastNiftyData': {'rate_limit': '1/s'}
# }

from datetime import timedelta


CELERYBEAT_SCHEDULE = {
    'net-every-20-seconds': { #networth
            'task': 'dalalbull.tasks.net',
            'schedule': timedelta(seconds=5),
            'args': ()
     },
    'dq-every-5-seconds': {      #graph data
            'task': 'dalalbull.tasks.dq',
            'schedule': timedelta(seconds=300),
            'args': ()
     },
    'tq-every-second': {    #stock and orders
            'task': 'dalalbull.tasks.tq',
            'schedule': timedelta(seconds=1), 
            'args': ()
     },
     'broadcastNiftyData-every-5-seconds': {
            'task': 'dalalbull.tasks.broadcastNiftyData',
            'schedule': timedelta(seconds=5),
            'args': ()
     },
     # 'broadcastLeaderboardData-every-600-seconds': {
     #        'task': 'dalalbull.tasks.broadcastLeaderboardData',
     #        'schedule': timedelta(seconds=600),
     #        'args': ()
     # },
     'broadcastGraphData-every-300-seconds': {
            'task': 'dalalbull.tasks.broadcastGraphData',
            'schedule': timedelta(seconds=300),
            'args': ()
     },
     'broadcastPortfolioData-every-1-seconds': {
            'task': 'dalalbull.tasks.broadcastPortfolioData',
            'schedule': timedelta(seconds=1),
            'args': ()
     },
     'broadcastSellData-every-20-seconds': {
            'task': 'dalalbull.tasks.broadcastSellData',
            'schedule': timedelta(seconds=10),
            'args': ()
     },
     'broadcastTickerData-every-60-seconds': {
            'task': 'dalalbull.tasks.broadcastTickerData',
            'schedule': timedelta(seconds=3),
            'args': ()
     },
     'orderLeaderboard-every-60-seconds': {
            'task': 'dalalbull.tasks.orderLeaderboard',
            'schedule': timedelta(seconds=3),
            'args': ()
     },
}


# CORS settings
CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_CREDENTIALS = True

CORS_ORIGIN_WHITELIST = (
    'localhost:4200',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("localhost", 6379)],
        },
        "ROUTING": "playExcel.routing.channel_routing",
    },
}
